options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')
options(repos = c(CRAN='https://mran.microsoft.com/snapshot/2018-06-19'), download.file.method = 'libcurl')


# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST
# is not set since a redirect to localhost may not work depending upon
# where this Docker container is running.
if(is.na(Sys.getenv("HTTR_LOCALHOST", unset=NA))) {
  options(httr_oob_default = TRUE)
}

prince_license <-
'Using this docker image, you agree with the following terms of the Prince XML license.
------------------------------
------------------------------
End User License Agreement

This license agreement (the “Agreement”) is entered into between you, as a private person or a company (the “Licensee”) and YesLogic Pty Ltd, an Australian company, having its registered address at 7 / 39 Bouverie Street, Carlton, VIC 3053, Australia (“YesLogic”). By installing, copying or otherwise using all or any portion of the Prince formatter (the “Software”) the Licensee agrees to be bound by the terms of the Agreement.
1 LICENSE

Subject to the terms of this Agreement, YesLogic hereby grants to Licensee a non-exclusive, non-transferable, non-sublicensable and limited license only to install and use one copy of the Software on up to the number of computers as authorized in this Agreement.
1.1 Non-commercial license

If this is a Non-commercial license, Licensee may download, install and use the Software for Non-commercial Purposes on a computer that is accessible to any number of end users. PDF documents generated by the Software include notices that identify the Software. Licensee shall not change or remove these notices or assist or encourage third parties to remove or change such notices.

When the Non-commercial license is used to routinely generate documents, a prominent link to the www.princexml.com Web site shall be displayed on the pages from where the generated documents can be fetched, and in a prominent public Web page where business partners are listed. If PDF documents are sent as email attachments by Licensee, all email messages must contain the www.princexml.com Web address in the message body.
1.2 Desktop license

If this is a Desktop license, Licensee may download, install and use the Software on a single computer for Interactive Use By a Single User only.
1.3 Server license

If this is a Server license, Licensee may download, install and use the Software on a computer that is accessible to any number of end users. Additionally, Licensee may download, install and use the Software on two other computers which are only used for testing and development purposes.
1.4 Academic Server license

If this is an Academic Server license, Licensee may download, install and use the Software for Academic Purposes on a computer that is accessible to any number of end users. Additionally, Licensee may download, install and use the Software on two other computers which are only used for testing and development purposes.
1.5 OEM license

If this is an OEM (“Original Equipment Manufacturer”) license, Licensee may download, install and use the Software according to a separate agreement.
1.6 CSO license

If this is an CSO (“Commercial Services Offerings”) license, Licensee may download, install and use the Software according to a separate agreement.
2 DEFINITIONS

“Non-commercial Purposes” means the production of documents (a) for which no fees are charged, and (b) which are not part of a monetary transaction system (such as, but not limited, to invoices and receipts), and (c) for which no other income (such as, but not limited to, subscription fees, income from advertising or sale of consumables) is generated.

“Academic Purposes” means the production of dissertations, papers, lecture notes, hand-outs and similar documents or publications of academic character for distribution on the Web, at lectures, or through university bookstores or similar academic channels that are not of a strictly commercial character. A university press run on commercial terms is considered to be strictly commercial.

“Commercial Service Offerings” means services in which the Software is a part and for which the Licensee charges fees or has other income (such as but not limited to income from advertising or sale of consumables) related to documents generated by the Software.

“Interactive Use By a Single User” means that all processing performed by the Software is initiated by a local human user. The Software may not be part of a Web application or other server software.

“Software” means (a) the Prince formatter included third party software files and other information and (b) upgrades, updates and additions to such provided to you by YesLogic, to the extent not provided under a separate agreement.
3 LIMITATIONS AND RESTRICTIONS

The following shall apply in addition to the limitations and restrictions set forth elsewhere in this Agreement:

  Licensee shall not modify, adapt, translate or create derivative works based upon the Software. Licensee shall not reverse engineer, decompile, disassemble or otherwise attempt to discover the source code of the Software.

Licensee shall not use, distribute, rent, lease, disclose or license out the Software for Commercial Service Offerings to its own end users or third parties.

OEMs, value-added resellers (VARs), providers of SaaS offerings, and providers of Commercial Services Offerings of all kinds, must enter into a separate OEM or CSO licensing agreement with YesLogic for such purposes.

Licensee shall not transfer any of its rights under this Agreement without the express written consent of YesLogic.

4 SUPPORT AND MAINTENANCE

YesLogic will provide the following support and maintenance services (the “Services”) free of charge for a period of 12 months following the date of this Agreement:

  E-mail support: YesLogic will attempt to respond to technical questions made by the Licensee by email within a reasonable period of time.

Upgrades: YesLogic will attempt to distribute upgrades to the Software on a regular basis. Installation and use of such upgrades will be governed by the terms of this Agreement.

This Clause 4 does not apply if this is a Non-commercial license.
5 INTELLECTUAL PROPERTY RIGHTS

YesLogic and its suppliers are the owner of all intellectual property rights relating to the Software and the Services. These rights are protected by intellectual property legislation in Australia and other jurisdictions and by international treaty provisions. YesLogic and its suppliers retains all rights in the Software and the Services that are not expressly granted to the Licensee through this Agreement.

Licensee is not allowed to remove, alter or destroy any proprietary, trademark or copyright markings or notices placed upon or contained with the Software.
6 PRIVACY

The Licensee grants YesLogic the right to store contact details and other related information in order for YesLogic to contact the Licensee occasionally regarding the Software. YesLogic will not use contact details and other related information for any other purpose.
7 TERM AND TERMINATION

The Agreement and the licensing rights provided to the Licensee shall continue for an indefinite term. Without prejudice to any other rights, YesLogic may terminate the Agreement if the Licensee fails to comply with the terms and conditions of this Agreement.
8 NO WARRANTY

TO THE MAXIMUM EXTENT PERMITTED BY LAW, YESLOGIC DISCLAIMS ANY WARRANTY FOR THE SOFTWARE AND THE SERVICES. THE SOFTWARE, THE SERVICES AND ANY RELATED DOCUMENTATION IS PROVIDED ON AN “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT WITH REGARD TO THE SOFTWARE OR THE SERVICES.
9 CUSTOMER REMEDIES

The entire liability for YesLogic, and the exclusive remedy for the Licensee, under this Agreement shall be, at YesLogic\'s option, to either (a) return the price paid for the Software, or (b) replace the Software.

TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL YESLOGIC OR ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, PERSONAL INJURY, LOSS OF PRIVACY OR ANY OTHER PECUNIARY LOSS) ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE OR THE SERVICES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
10 GOVERNING LAW AND ARBITRATION

This Agreement shall be governed by and construed in accordance with Norwegian law. Any dispute arising under or in connection with this contract shall be referred to arbitration pursuant to the Norwegian 2004 Arbitration Act. Each Party shall appoint one arbitrator and the two arbitrators shall appoint the third arbitrator who shall be the chairman of the arbitration tribunal. The chairman shall be a Norwegian legal professional. If one Party fails to appoint an arbitrator within one month from being requested to do so or if the two arbitrators can not within one month from the last appointment agree on who shall be appointed chairman, the Chief Justice of Oslo District Court shall be the appointer. The venue of the arbitral proceedings shall be in Oslo, and the proceedings shall be conducted in the English language. The arbitration is deemed to be commenced when request for arbitration is being sent from the Party requesting arbitration. The Parties agree to conclude a separate agreement on confidentiality of both the arbitral proceedings and the award immediately after arbitration has been requested.'

if(interactive()) {
  agree <- shiny::runGadget(
    app = miniUI::miniPage(
      miniUI::miniContentPanel(
        shiny::tags$p(prince_license),
        miniUI::gadgetTitleBar(
          "Do you accept these terms?",
          left = miniUI::miniTitleBarButton("cancel", "Cancel"),
          right = miniUI::miniTitleBarButton("agree", "I agree", primary = TRUE)
        )
      )
    ),
    server = function(input, output, session) {
      shiny::observeEvent(input$agree, {
        shiny::stopApp(TRUE)
      })
      shiny::observeEvent(input$cancel, {
        shiny::stopApp(FALSE)
      })
      shiny::onStop(function() {
        shiny::stopApp(FALSE)
      })
    },
    viewer = shiny::dialogViewer("License")
  )

  if(!agree) quit()
}
